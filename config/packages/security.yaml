security:
  enable_authenticator_manager: true

  password_hashers:
    App\Entity\User: 'auto'

  providers:
    db_provider:
      entity:
        class: App\Entity\User

    db_api_provider:
      entity:
        class: App\Entity\User
        property: apiToken

    # ldap_provider:
    #   ldap:
    #     service: Symfony\Component\Ldap\Ldap
    #     base_dn: ou=people,ou=hpc,dc=rrze,dc=uni-erlangen,dc=de
    #     search_dn: cn=hpcmonitoring,ou=roadm,ou=profile,ou=hpc,dc=rrze,dc=uni-erlangen,dc=de
    #     search_password: '%env(LDAP_PW)%'
    #     default_roles: ['ROLE_USER']
    #     uid_key: uid
    #     filter: (&(objectclass=posixAccount)({uid_key}={username}))
    #
    # chain_provider:
    #     chain:
    #       providers: [ 'ldap_provider', 'db_provider' ]

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api:
      pattern: ^/api/job.*
      stateless: true
      provider: db_api_provider
      custom_authenticators:
        - App\Security\TokenAuthenticator

    main:
      pattern: ^/
      lazy: true
      provider: db_provider
      # provider: chain_provider

      form_login:
        check_path: security_login
        login_path: security_login
        enable_csrf: true
        default_target_path: list_jobs

      # form_login_ldap:
      #   login_path: security_login
      #   check_path: security_login
      #   enable_csrf: true
      #   default_target_path: list_jobs
      #   service: Symfony\Component\Ldap\Ldap
      #   dn_string: ou=people,ou=hpc,dc=rrze,dc=uni-erlangen,dc=de
      #   query_string: (&(objectclass=posixAccount)(uid={username}))
      #   search_dn: cn=hpcmonitoring,ou=roadm,ou=profile,ou=hpc,dc=rrze,dc=uni-erlangen,dc=de
      #   search_password: '%env(LDAP_PW)%'
      #
      # entry_point: form_login_ldap

      logout:
        path: security_logout
        target: security_login

  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/docs, roles: PUBLIC_ACCESS }
    - { path: ^/monitoring, roles: [ROLE_USER, ROLE_ANALYST, ROLE_ADMIN]}
    - { path: ^/config, roles: ROLE_USER }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/api/job.*, roles: ROLE_API }
    - { path: ^/api/configurations, roles: [ROLE_USER, ROLE_ANALYST, ROLE_ADMIN]}
    - { path: ^/query, roles: [ROLE_USER, ROLE_ANALYST, ROLE_ADMIN]}


when@test:
  # this configuration simplifies testing URLs protected by the security mechanism
  # See https://symfony.com/doc/current/testing/http_authentication.html
  security:
    firewalls:
      main:
        http_basic: ~
        entry_point: http_basic
        # entry_point: form_login
