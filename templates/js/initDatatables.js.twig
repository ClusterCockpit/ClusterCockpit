function timeConverter(UNIX_timestamp){
    var a = new Date(UNIX_timestamp * 1000);
    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
    var year = a.getFullYear();
    var month = months[a.getMonth()];
    var date = a.getDate();
    var hour = a.getHours();
    var min = a.getMinutes();
    var sec = a.getSeconds();
    var time =  hour + ':' + min + '</br>' + date + ' ' + month + ' ' + year;
    return time;
}

$(document).ready( function () {
    var tablelist =  $('#jobs').DataTable(
        {
            "ajax": {
                "url": "/web/jobs",
                "data": {
                    "jobQuery": {{ jobQuery|raw }}
                }
            },
            "serverSide": true,
            "processing": true,
            "stateSave": true,
            "deferRender": true,
            "initComplete": function( settings, json ) {
                    $('#info_message').text('Showing '+json.recordsTotal+' jobs.');
            },
            "language":  {
                "processing": '<h4 class="text-center mt-4">\
                              <i class="fas fa-circle-notch fa-spin fa-lg"></i> loading...\
                      </h4>'
            },
            "columns": [
                {
                    "data": "jobinfo",
                    "render": function ( data, type, row ) {
                        var runtime = data.runtime/3600;
                        var content = '<strong>'+data.jobid+'</strong></br>'+
                            '<a href="/monitoring/user/'+data.userid+'">'+data.username+'</a></br>'+
                            data.numnodes+' nodes</br></br>'+
                            '<strong>Duration:</strong></br>'+runtime.toFixed(2)+' hours</br></br>'+
                            '<strong>Started:</strong></br>'+timeConverter(data.starttime);
                            content += '</br>';

                        for (let tag of data.tags) {
                            content += '<a href="/monitoring/listjobs/'+tag.id+'" class="badge badge-pill badge-warning mt-1">'+tag.name+'</a></br>';
                        }

                        return content;
                    }
                },
                {% for metric in sortMetrics %}
                    { "data": "{{ metric.accessKey }}" },
                {% endfor %}
                {
                    "data": "plots",
                        "render": function ( data, type, row ) {
                            if ( data ){
                                var content = '<a href=\"/monitoring/job/'+data.id+'\" target=\"_blank\">';
                                content += '<div class=\"row\">';
                                var count = data.plots.length;

                                for (let plot of data.plots) {
                                    let plot_name = data.id+'_'+plot.name;
                                    content += '<div class=\"col px-1 py-1\" id=\"'+plot_name+'\"></div>';
                                    content += '\<script\>';
                                    content += 'var size = ($(window).width() /'+count+')*0.8;';
                                    content += 'var p_width = size;';
                                    content += 'var p_height = size;';
                                    content += 'var options_'+plot_name+'='+JSON.stringify(plot.options)+';';
                                    content += 'var data_'+plot_name+'='+JSON.stringify(plot.data)+';';
                                    content += 'options_'+plot_name+'[\'height\'] = p_height;';
                                    content += 'options_'+plot_name+'[\'width\'] = p_width;';
                                    content += 'Plotly.newPlot(\''+plot_name+'\',data_'+plot_name+
                                                ',options_'+plot_name+','+data.plotOptions+');';
                                    content += '\</script\>';
                                }
                                content += '</div>';
                                content += '</a>';
                            } else {
                                var content = '<div class="alert alert-secondary" role="alert">\
                                             <h4 class="text-center mt-4">\
                                             <i class="fas fa-exclamation-triangle fa-lg"></i>\
                                                No performance data available! \
                                             </h4>\
                                           </div>';
                            }
                            return content;
                        }
                }
            ],
            "columnDefs": [
                { "orderable": false, "targets": [{{ columnDefs.orderable }}] },
                { "visible": false, "targets": [{{ columnDefs.visible }}] },
                { "searchable": false, "targets": [{{ columnDefs.searchable }}] }
            ],
            "paging": true
        }
    );

    tablelist
        .order([{{ config['plot_list_sortColumn'].value|default(1) }},
            '{{ config['plot_list_sortDirection'].value|default('asc') }}'
        ])
        .draw();

    $('#toggleFilter').click(function(){
        var table = $('#jobs').DataTable();

        if ( table.column(1).visible() ){
            table.columns( [{{ columnDefs.visible }}] ).visible( false );
        } else {
            table.columns( [{{ columnDefs.visible }}] ).visible( true );
        }
    });

    tablelist.on('draw.dt', function() {
        $('html, body').animate({ scrollTop: $(".dataTables_wrapper").offset().top }, 'slow');
    });
});
