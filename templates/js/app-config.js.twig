function handleErrors (response) {
    if (response.ok) {
       return response
    }

     document.querySelector(id+"-help").textContent = "Error!";
     document.querySelector(id+"-help").classList.remove("invisible");
}

document.querySelectorAll("button").forEach( button => {
    button.addEventListener("click", (e) => {
          e.preventDefault();
          id = "#"+ e.target.getAttribute("value");
          action = e.target.getAttribute("name");
          value = document.querySelector(id).value;
          validation = document.querySelector(id).getAttribute("data-validation");
          re = new RegExp(validation);

          if ( ! re.test(value) ) {
              document.querySelector(id).addClass('is-invalid');
              return;
          }

          let payload = {
              name: document.querySelector(id).getAttribute("id"),
              value: value,
              scope: '{{ scope }}'
          };

          fetch("{{ app.request.schemeAndHttpHost ~ app.request.baseUrl }}/api/configurations/"+e.target.getAttribute("id"), {
              method: 'GET',
              mode: 'cors', // no-cors, *cors, same-origin
              credentials: 'same-origin', // include, *same-origin, omit
              headers: {
                  'content-type': 'application/json'
              },
          })
          .then(handleErrors)
          .then(response => response.json())
          .then(data => {
             payload.label = data.label;
             payload.validation = data.validation;
             payload.feedback = data.feedback;
           })

           if ( action == 'update' ) {
               fetch("{{ app.request.schemeAndHttpHost ~ app.request.baseUrl }}/api/configurations/"+e.target.getAttribute("id"), {
                   method: 'PATCH',
                   mode: 'cors', // no-cors, *cors, same-origin
                   credentials: 'same-origin', // include, *same-origin, omit
                   headers: {
                       'Content-Type': 'application/merge-patch+json'
                   },
                   body: JSON.stringify(payload) // body data type must match "Content-Type" header
               })
               .then(handleErrors)
               .then(response => {
                       document.querySelector(id+"-help").textContent = "Success!";
                       document.querySelector(id+"-help").classList.remove("invisible");
                       // console.log(response.json());
                 });
               console.log('update');
           } else if ( action == 'reset' ) {
               fetch("{{ app.request.schemeAndHttpHost ~ app.request.baseUrl }}/api/configurations/"+e.target.getAttribute("id"), {
                   method: 'DELETE',
                   mode: 'cors', // no-cors, *cors, same-origin
                   credentials: 'same-origin', // include, *same-origin, omit
               })
               .then(handleErrors)
               .then(response => {
                       // location.reload();
                 })

               console.log('reset');
           } else if ( action == 'replace' ) {
               console.log(payload);
               // console.log(payload);
               fetch("{{ app.request.schemeAndHttpHost ~ app.request.baseUrl }}/api/configurations", {
                   method: 'POST',
                   mode: 'cors', // no-cors, *cors, same-origin
                   credentials: 'same-origin', // include, *same-origin, omit
                   headers: {
                       'content-type': 'application/json'
                   },
                   body: JSON.stringify(payload) // body data type must match "Content-Type" header
               })
               .then(handleErrors)
               .then(response => {
                       // location.reload();
                 })
               console.log('replace');
           }
     })
});

