{% extends 'base.html.twig' %}

{% block title %}
    {{ title }}
{% endblock %}

{% block navigation %}
    <div class="collapse navbar-collapse">
        <span class="navbar-text font-weight-bold ml-5">
            Navigation
        </span>
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link page-scroll" href="#page-top">
                    Top
                </a>
            </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown">
                        Metric lists
                    </a>
                    <div class="dropdown-menu">
                        {% for list in cluster.metricLists %}
                            <a class="dropdown-item page-scroll" href="#list-{{ list.id }}">
                            {{ list.name }}
                        </a>
                        {% endfor %}
                    </div>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#nodes">
                        Node list
                    </a>
                </li>
        </ul>
    </div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script src="{{ asset('js/feather.min.js') }}"/></script>
    <script>

        function collectTableData(table, count){
            var data = [];
            var keys = [];

            $('th',table).each(function(i){
                if ( i < count ){
                    var str = $(this).text();
                    keys.push(str.toLowerCase());
                }
            });
            $('tr',table).each(function(i){
                var row = {};
                $(this).children('td').each(function(j){
                    if ( j < count ){
                        row[keys[j]] = $(this).text();
                    }
                });
                data.push(row);
            });

            return data;
        }

        function findTables(){
            var lists = [];

            $('body table.table').each(function(i){
                var list = {};
                list['name'] = $(this).attr('id');
                list['rows'] = collectTableData($(this), 9);
                lists.push(list);
            });

            return lists;
        }


        function editTableRow(row, rowData) {
            var formRow = $("<tr/>").insertAfter(row);
            $.each(rowData, function(i, c) {
                if ( i < 9 ){
                    formRow.append($('<td/>').html("<input class=\"form-control text-center\" type=\"text\" value=\""+c+"\">"));
                }
            });
            formRow.append($('<td/>').html("<button type=\"button\" class=\"btn btn-success form-callback\">Change</button>"));
            formRow.append($('<td/>').html("<button type=\"button\" class=\"btn btn-danger form-callback\">Cancel</button>"));

            return formRow;
        }

        function addTableRow(row) {
            var formRow = $("<tr/>").insertAfter(row);
            var rowData = new Array(9);

            $.each(rowData, function(colIndex, c) {
                formRow.append($('<td/>').html("<input class=\"form-control text-center\" type=\"text\" >"));
            });
            formRow.append($('<td/>').html("<button type=\"button\" class=\"btn btn-success form-callback\">Append</button>"));
            formRow.append($('<td/>').html("<button type=\"button\" class=\"btn btn-danger form-callback\">Cancel</button>"));

            return formRow;
        }

        function getRow(row) {
            var data = [];
            row.find('td').each(function (colIndex, c) {
                data.push(c.textContent);
            });
            return data;
        }

        $( document ).ready(function() {
            feather.replace()

            $("tbody").on("click", ".form-callback", function(e) {
                e.preventDefault();
                var action = $(this).text();
                var $row = $(this).closest("tr");

                if ( action === 'Change'){
                    var $prevRow = $row.prev();
                    var fields = $row.find('input');

                    $prevRow.find('td').each(function(index, col ) {
                        if ( index < 9 ){
                            $(col).text($(fields[index]).val());
                        }
                    });
                }
                if ( action === 'Append'){
                    var fields = $row.find('input');
                    var newRow = $("<tr/>").insertBefore($row);

                    $.each(fields, function(colIndex, c) {
                        newRow.append($('<td/>').addClass( "align-middle text-center" ).text($(c).val()));
                    });
                    newRow.append($('<td/>').addClass( "align-middle text-center" ).html("<button type=\"button\" name=\"edit\" class=\"btn btn-success button-callback\"><span class=\"fas fa-pen-square fa-lg\" aria-hidden=\"true\"></span></button>"));
                    newRow.append($('<td/>').addClass( "align-middle text-center" ).html("<button type=\"button\" name=\"delete\" class=\"btn btn-danger button-callback\"><span class=\"fas fa-times fa-lg\" aria-hidden=\"true\"></span></button>"));
                }
                $row.remove();
            });

            $(".table-responsive").on("click", ".button-callback", function(e) {
                e.preventDefault();
                var action = $(this).attr("name");
                var row = $(this).closest("tr");

                if ( action === 'edit'){
                    var data = getRow(row);
                    editTableRow(row, data);
                }
                if ( action === 'delete'){
                    $(row).remove();
                }
                if ( action === 'add'){
                    var tableId = $(this).val();
                    var id = "#"+tableId;
                    row = $('<tr/>').appendTo($(id).find('tbody:last'));
                    addTableRow(row);
                    $(row).remove()
                }
            });

            $("#cluster_save").click(function( event ) {
                var data = {};
                data['metricLists'] = findTables();

                $.ajax({
                    type: "PATCH",
                    url: "/web/clusters/{{ cluster.id }}",
                    data: JSON.stringify(data),
                    processData: false,
                    contentType : 'application/json',
                    dataType: 'json',
                    success: function(result) {
                        <!-- alert('Success!'); -->
                    },
                    error: function(result) {
                        <!-- alert('Error!'); -->
                    }
                });
            });
        });
    </script>
{% endblock %}

{% form_theme form 'bootstrap_4_layout.html.twig' %}

    {% block body %}
        <div class="row">
            {{ include("renderSidebar.html.twig") }}
            <div class="col-10 ml-auto">

                <h2 id='page-top'>{{ title }} </h2>

                {{ form_start(form) }}
                <!-- {{ form_errors(form) }} -->

                <div class="form-group row">
                    <div class="col">
                        {{ form_row(form.name) }}
                        {{ form_row(form.coresPerNode) }}
                    </div>
                    <div class="col">

                        <div class="form-group">
                            {{ form_label(form.flopRateScalar) }}
                            <div class="input-group">
                                {{ form_widget(form.flopRateScalar) }}
                                <div class="input-group-append">
                                    <div class="input-group-text">GFlops/s</div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            {{ form_label(form.flopRateSimd) }}
                            <div class="input-group">
                                {{ form_widget(form.flopRateSimd) }}
                                <div class="input-group-append">
                                    <div class="input-group-text">GFlops/s</div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            {{ form_label(form.memoryBandwidth) }}
                            <div class="input-group">
                                {{ form_widget(form.memoryBandwidth) }}
                                <div class="input-group-append">
                                    <div class="input-group-text">GB/s</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group row justify-content-end">
                    <div class="col-1">
                        {{ form_widget(form.cancel, {'attr': {'class': 'btn-danger btn'}}) }}
                    </div>
                    <div class="col-2">
                        {{ form_widget(form.save, {'attr': {'class': 'btn-success btn'}}) }}
                    </div>
                </div>

                {{ form_end(form) }}

                {% for list in cluster.metricLists %}
                    <h4 id='list-{{ list.id }}'>Metric list: {{ list.name }}</h4>

                    <div class="table-responsive">
                        <table id="{{ list.name }}" class="table table-striped table-bordered  table-hover">
                            <thead class="thead-light">
                                <th>Position</th>
                                <th>Slot</th>
                                <th>Name</th>
                                <th>Unit</th>
                                <th>Scale</th>
                                <th>Peak</th>
                                <th>Normal</th>
                                <th>Caution</th>
                                <th>Alert</th>
                                <th scope="col">Edit</th>
                                <th scope="col">Delete</th>
                            </thead>
                            <tbody>
                                {% for metric in list.metrics %}
                                    <tr>
                                        <td class="align-middle text-center">{{ metric.position }}</td>
                                        <td class="align-middle text-center">{{ metric.slot }}</td>
                                        <td class="align-middle text-center">{{ metric.name }}</td>
                                        <td class="align-middle text-center">{{ metric.unit }}</td>
                                        <td class="align-middle text-center">{{ metric.scale }}</td>
                                        <td class="align-middle text-center">{{ metric.peak }}</td>
                                        <td class="align-middle text-center">{{ metric.normal }}</td>
                                        <td class="align-middle text-center">{{ metric.caution }}</td>
                                        <td class="align-middle text-center">{{ metric.alert }}</td>
                                        <td class="align-middle text-center">
                                            <button type="button" name="edit" class="btn btn-success button-callback">
                                                <span class="fas fa-pen-square fa-lg" aria-hidden="true"></span>
                                            </button>
                                        </td>
                                        <td class="align-middle text-center">
                                            <button type="button" name="delete" class="btn btn-danger button-callback">
                                                <span class="fas fa-times fa-lg" aria-hidden="true"></span>
                                            </button>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                        <div class="row m-2 justify-content-end">
                            <div class="col-2">
                                <button type="button" value="{{ list.name }}" name="add" class="btn btn-secondary button-callback">Add new entry</button>
                            </div>
                        </div>
                    </div>
                {% endfor %}

                <h4 id='nodes'>Node list</h4>

                <a>Cluster has {{ cluster.nodes | length }} active nodes.</a> 

                <div class="table-responsive">
                    <table class="table table-striped table-bordered  table-hover">
                        <thead class="thead-light">
                            <th>Id</th>
                            <th>NodeId</th>
                            <th>Processor</th>
                            <th>Cores/Processors</th>
                            <th>Status</th>
                        </thead>
                        <tbody>
                            {% for node in cluster.nodes %}
                                <tr>
                                    <td class="align-middle text-center">{{ node.id }}</td>
                                    <td class="align-middle text-center">{{ node.nodeId }}</td>
                                    <td class="align-middle text-center">{{ node.uarch }}</td>
                                    <td class="align-middle text-center">{{ node.numCores }}/{{ node.numProcessors }}</td>
                                    <td class="align-middle text-center">{{ node.status }}</td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
    {% endblock %}


