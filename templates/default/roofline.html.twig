{% extends 'base.html.twig' %}

{% block title %}
    ClusterCockpit
{% endblock %}

{% block navigation %}
{% endblock %}

{% block body %}
    <div class="container" style="margin-top:80px;">
        <div class="row">
            <div class="col">
                <div style="width:1200px; height:700px" id="meggie-roof"></div>
                <div style="width:1200px; height:700px" id="emmy-roof"></div>
                <div style="width:1200px; height:700px" id="woody-roof"></div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    <script src="{{ asset('js/plotly-basic.min.js') }}"/></script>

    <script>
        var systems = ["meggie","emmy","woody"];

        systems.forEach(renderPlot);

        function renderPlot(system) {
            fetch("https://131.188.16.40:8080/roofline/"+system)
                .then(response => response.json())
                .then(data => {
                    var trace1 = {
                        x: data.SimdRoof.x,
                        y: data.SimdRoof.y,
                        name: "SIMD Roof",
                        mode: 'lines',
                        type: 'scatter',
                        line: {
                            color: "red"
                        }
                    };

                    var trace2 = {
                        x: data.ScalarRoof.x,
                        y: data.ScalarRoof.y,
                        name: "Scalar Roof",
                        mode: 'lines',
                        type: 'scatter',
                        line: {
                            color: "black"
                        }
                    };

                    var trace3 = {
                        x: data.X,
                        y: data.Y,
                        name: system+" nodes",
                        mode: 'markers',
                        type: 'scatter',
                        text: data.Label,
                        hoverlabel: {
                            bgcolor: "lightgrey"
                        },
                        marker: {
                            size: 12,
                            color: "goldenrod",
                            line: {
                                width: 1,
                                color: "black"
                            }
                        }
                    };

                    var pdata = [ trace1, trace2, trace3 ];

                    var layout = {
                        xaxis: {
                            type: 'log',
                            range: [ -2 , 3 ],
                            title: {
                                text: "Intensity [flops/byte]"
                            }
                        },
                        yaxis: {
                            type: 'log',
                            range: [ -1 , 3.5 ],
                            title: {
                                text: "Performance [GFlops/s]"
                            }
                        },
                        title:'Cluster Roofline:'+system
                    };

                    Plotly.newPlot(system+'-roof', pdata, layout);

                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
{% endblock %}
